plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group 'me.gabytm.minecraft'
version '2.0.0'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven { url 'https://jitpack.io' }

    maven {
        url 'https://repo.codemc.org/repository/maven-public/'
    }

    maven {
        url 'https://repo.mattstudios.me/artifactory/public/'
    }

    maven {
        name 'HeadDatabase-API'
        url 'https://mvn.intellectualsites.com/content/groups/public/'
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    // Actions
    compileOnly 'me.gabytm.util:actions-core:1.0.0-SNAPSHOT'
    implementation('me.gabytm.util:actions-spigot:1.0.0-SNAPSHOT') { exclude group: 'com.google.guava' }

    compileOnly('com.github.MilkBowl:VaultAPI:1.7') { transitive false }

    // NBT
    compileOnly 'de.tr7zw:item-nbt-api-plugin:2.8.0'

    // Adventure
    implementation 'net.kyori:adventure-api:4.9.3'
    implementation 'net.kyori:adventure-platform-bukkit:4.0.0'
    implementation 'net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT'

    // GUis and commands
    implementation 'dev.triumphteam:triumph-gui:3.0.3'
    implementation 'me.mattstudios.utils:matt-framework:1.4.6'

    // Heads
    compileOnly('com.arcaniax:HeadDatabase-API:1.3.1') { transitive false }
}

processResources {
    eachFile { expand version: version }
}

shadowJar {
    archiveName("ArcaneVouchers [${project.version}].jar")

    [
            'org.codemc.worldguardwrapper': 'worldguardwrapper',
            'me.gabytm.util.actions'      : 'actions',
            'dev.triumphteam.gui'         : 'gui',
            'net.kyori.adventure'         : 'adventure',
            'me.mattstudios.mf'           : 'commands',
            'kotlin'                      : 'kt'
    ].each { relocate(it.key, project.group + '.arcanevouchers.libs.' + it.value) }
}

task copyToServer(type: Copy) {
    from shadowJar
    into './server/plugins'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
